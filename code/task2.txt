#任务2.1  绘制2017年6月销量前5的商品销量柱状图
import numpy as np
import pandas as pd
NewRetail=pd.read_csv(r'C:\python\NewRetail\NewRetail.csv', sep = ',',index_col=0,encoding = 'gbk')
periodIndex= pd.PeriodIndex(NewRetail['支付时间'],freq = 'M')
month6=NewRetail.loc[periodIndex=='2017-06',:]
detailGroup3= month6.groupby(by = '商品')
n=detailGroup3.size()
n.to_csv(r'C:\python\NewRetail\201706销量.csv',index=True,encoding = 'gbk')
n=pd.read_csv(r'C:\python\NewRetail\201706销量.csv', sep = ',',header=None,encoding = 'gbk')
n=n.sort_values(by=1,ascending=False)
print('2017年6月销量前5的商品销量：\n', n.head())
import matplotlib.pyplot as plt
#plt.subplots(figsize=(9, 9))
plt.rcParams['font.sans-serif'] = 'SimHei'## 设置中文显示
plt.rcParams['axes.unicode_minus'] = False
name_list=n[0][:5]
num_list=n[1][:5].values
plt.bar(range(len(num_list)), num_list, width = 0.5,tick_label=name_list)
for i in range(len(num_list)):
    plt.text(i, num_list[i], num_list[i], va='bottom', ha='center')
plt.xlabel('商品')## 添加横轴标签
plt.ylabel('商品销售量')## 添加y轴名称
plt.title('2017年6月销量前5的商品销量柱状图')## 添加图表标题
plt.savefig(r'C:\python\NewRetail\2017年6月销量前5的商品销量柱状图.png')
plt.show()
#2.2  绘制每台售货机每月总交易额折线图及交易额月环比增长率柱状图。
A=pd.read_csv(r'C:\python\NewRetail\task1-1A.csv', sep = ',',index_col=0,encoding = 'gbk')
A['支付时间']=pd.to_datetime(A['支付时间'])
periodIndexA= pd.PeriodIndex(A['支付时间'],freq = 'M')
B=pd.read_csv(r'C:\python\NewRetail\task1-1B.csv', sep = ',',index_col=0,encoding = 'gbk')
B['支付时间']=pd.to_datetime(B['支付时间'])
periodIndexB= pd.PeriodIndex(B['支付时间'],freq = 'M')
C=pd.read_csv(r'C:\python\NewRetail\task1-1C.csv', sep = ',',index_col=0,encoding = 'gbk')
C['支付时间']=pd.to_datetime(C['支付时间'])
periodIndexC= pd.PeriodIndex(C['支付时间'],freq = 'M')
D=pd.read_csv(r'C:\python\NewRetail\task1-1D.csv', sep = ',',index_col=0,encoding = 'gbk')
D['支付时间']=pd.to_datetime(D['支付时间'])
periodIndexD= pd.PeriodIndex(D['支付时间'],freq = 'M')
E=pd.read_csv(r'C:\python\NewRetail\task1-1E.csv', sep = ',',index_col=0,encoding = 'gbk')
E['支付时间']=pd.to_datetime(E['支付时间'])
periodIndexE= pd.PeriodIndex(E['支付时间'],freq = 'M')

p1 = plt.figure(figsize=(16,16),dpi=80)## 确定画布大小
ax1 = p1.add_subplot(5,1,1)
detailGroupA=A.groupby(by = periodIndexA)
y1=detailGroupA.sum()
y1=y1.values
y1=y1[:,1]
x=np.arange(1,13,1)
plt.plot(x, y1)
for i in range(len(y1)):
    plt.text(i, y1[i], y1[i], va='bottom', ha='center')
plt.ylabel('总交易额')## 添加y轴名称
plt.title('售货机A每月总交易额折线图')## 添加图表标题


ax2 = p1.add_subplot(5,1,2)
detailGroupB=B.groupby(by = periodIndexB)
y2=detailGroupB.sum()
y2=y2.values
y2=y2[:,1]
x=np.arange(1,13,1)
plt.plot(x, y2)
for i in range(len(y2)):
    plt.text(i, y2[i], y2[i], va='bottom', ha='center')
plt.ylabel('总交易额')## 添加y轴名称
plt.title('售货机B每月总交易额折线图')## 添加图表标题


ax3 = p1.add_subplot(5,1,3)
detailGroupC=C.groupby(by = periodIndexC)
y3=detailGroupC.sum()
y3=y3.values
y3=y3[:,1]
x=np.arange(1,13,1)
plt.plot(x, y3)
for i in range(len(y3)):
    plt.text(i, y3[i], y3[i], va='bottom', ha='center')
plt.ylabel('总交易额')## 添加y轴名称
plt.title('售货机C每月总交易额折线图')## 添加图表标题


ax4 = p1.add_subplot(5,1,4)
detailGroupD=D.groupby(by = periodIndexD)
y4=detailGroupD.sum()
y4=y4.values
y4=y4[:,1]
x=np.arange(1,13,1)
plt.plot(x, y4)
for i in range(len(y4)):
    plt.text(i, y4[i], y4[i], va='bottom', ha='center')
plt.ylabel('总交易额')## 添加y轴名称
plt.title('售货机D每月总交易额折线图')## 添加图表标题


ax5 = p1.add_subplot(5,1,5)
detailGroupE=E.groupby(by = periodIndexE)
y5=detailGroupE.sum()
y5=y5.values
y5=y5[:,1]
x=np.arange(1,13,1)
plt.plot(x, y5)
for i in range(len(y5)):
    plt.text(i, y5[i], y5[i], va='bottom', ha='center')
plt.ylabel('总交易额')## 添加y轴名称
plt.title('售货机E每月总交易额折线图')## 添加图表标题

plt.savefig(r'C:\python\NewRetail\每台售货机每月总交易额折线图.png')
plt.show()
#2.2  绘制每台售货机每月总交易额折线图及交易额月环比增长率柱状图。
p1 = plt.figure(figsize=(16,20),dpi=80)## 确定画布大小
ax1 = p1.add_subplot(5,1,1)
upper=[]
for i in range(len(y1)-1):
    upper.append((y1[i+1]-y1[i])/y1[i])
print(upper)
name_list=np.arange(1,12,1)
num_list=upper
plt.bar(range(len(num_list)), num_list, width = 0.5,tick_label=name_list)
for i in range(len(num_list)):
    plt.text(i, num_list[i], num_list[i], va='bottom', ha='center')
plt.ylabel('每月交易额月环比增长率')## 添加y轴名称
plt.title('售货机A每月交易额月环比增长率')## 添加图表标题


ax2 = p1.add_subplot(5,1,2)
upper=[]
for i in range(len(y2)-1):
    upper.append((y2[i+1]-y2[i])/y2[i])
print(upper)
name_list=np.arange(1,12,1)
num_list=upper
plt.bar(range(len(num_list)), num_list, width = 0.5,tick_label=name_list)
for i in range(len(num_list)):
    plt.text(i, num_list[i], num_list[i], va='bottom', ha='center')
plt.ylabel('每月交易额月环比增长率')## 添加y轴名称
plt.title('售货机B每月交易额月环比增长率')## 添加图表标题


ax3 = p1.add_subplot(5,1,3)
upper=[]
for i in range(len(y3)-1):
    upper.append((y3[i+1]-y3[i])/y3[i])
print(upper)
name_list=np.arange(1,12,1)
num_list=upper
plt.bar(range(len(num_list)), num_list, width = 0.5,tick_label=name_list)
for i in range(len(num_list)):
    plt.text(i, num_list[i], num_list[i], va='bottom', ha='center')
plt.ylabel('每月交易额月环比增长率')## 添加y轴名称
plt.title('售货机C每月交易额月环比增长率')## 添加图表标题



ax4 = p1.add_subplot(5,1,4)
upper=[]
for i in range(len(y4)-1):
    upper.append((y4[i+1]-y4[i])/y4[i])
print(upper)
name_list=np.arange(1,12,1)
num_list=upper
plt.bar(range(len(num_list)), num_list, width = 0.5,tick_label=name_list)
for i in range(len(num_list)):
    plt.text(i, num_list[i], num_list[i], va='bottom', ha='center')
plt.ylabel('每月交易额月环比增长率量')## 添加y轴名称
plt.title('售货机D每月交易额月环比增长率')## 添加图表标题



ax5 = p1.add_subplot(5,1,5)
upper=[]
for i in range(len(y5)-1):
    upper.append((y5[i+1]-y5[i])/y5[i])
print(upper)
name_list=np.arange(1,12,1)
num_list=upper
plt.bar(range(len(num_list)), num_list, width = 0.5,tick_label=name_list)
for i in range(len(num_list)):
    plt.text(i, num_list[i], num_list[i], va='bottom', ha='center')
plt.ylabel('每月交易额月环比增长率量')## 添加y轴名称
plt.title('售货机E每月交易额月环比增长率')## 添加图表标题


plt.savefig(r'C:\python\NewRetail\每台售货机每月交易额月环比增长率.png')
plt.show()
#2.3每台售货机毛利润占总毛利润比例的饼图
detailPivot= pd.pivot_table(NewRetail[['地点','大类', '实际金额']],
                              index = ['地点','大类'], aggfunc = np.sum)
print('\n',detailPivot)
a=detailPivot['实际金额']
a=a.values
print('a:\n',a)
A=a[0]*05.25+a[1]*0.2
B=a[2]*05.25+a[3]*0.2
C=a[4]*05.25+a[5]*0.2
D=a[6]*05.25+a[7]*0.2
E=a[8]*05.25+a[9]*0.2
X=[A,B,C,D,E]  
import matplotlib.mlab as mlab  
import matplotlib.pyplot as plt  
labels=['A','B','C','D','E']
X=[A,B,C,D,E]  
fig = plt.figure()
plt.pie(X,labels=labels,autopct='%1.2f%%') #画饼图（数据，数据对应的标签，百分数保留两位小数点）
plt.title("每台售货机毛利润占总毛利润比例的饼图（假设饮料类毛利率为25%，非饮料类为20%)")
plt.savefig(r'C:\python\NewRetail\每台售货机毛利润占总毛利润比例的饼图')
plt.show()  
#任务2.4  绘制每月交易额均值气泡图，横轴为时间，纵轴为商品的二级类目。
detailPivot1= pd.pivot_table(NewRetail[['支付时间','二级类', '实际金额']],
                             index =['支付时间','二级类'], aggfunc = np.mean)
qipaotu=detailPivot1
qipaotu.to_csv(r'C:\python\NewRetail\qipaotu.csv',index=True,encoding = 'gbk') 
order9= pd.read_csv(r'C:\python\NewRetail\qipaotu.csv', sep = ',',index_col=False,encoding = 'gbk')
#print('\n',order9)
detailPivot2= pd.pivot_table(order9[['二级类', '实际金额']],
                             index ='二级类')

#time=[pd.to_datetime(i) for i in order9["支付时间"]]
order9['支付时间']=pd.to_datetime(order9['支付时间'])
periodIndex9= pd.PeriodIndex(order9['支付时间'],freq = 'M')
order9['支付时间']=periodIndex9
order9.loc[order9['支付时间']=='2017-01','月份']='1'
order9.loc[order9['支付时间']=='2017-02','月份'] = '2'
order9.loc[order9['支付时间']=='2017-03','月份'] = '3'
order9.loc[order9['支付时间']=='2017-04','月份'] = '4'
order9.loc[order9['支付时间']=='2017-05','月份'] = '5'
order9.loc[order9['支付时间']=='2017-06','月份'] = '6'
order9.loc[order9['支付时间']=='2017-07','月份'] = '7'
order9.loc[order9['支付时间']=='2017-08','月份'] = '8'
order9.loc[order9['支付时间']=='2017-09','月份'] = '9'
order9.loc[order9['支付时间']=='2017-10','月份'] = '10'
order9.loc[order9['支付时间']=='2017-11','月份'] = '11'
order9.loc[order9['支付时间']=='2017-12','月份'] = '12'

order9.loc[order9['二级类']=='乳制品','二级类'] = '1'
order9.loc[order9['二级类']=='其他','二级类'] = '2'
order9.loc[order9['二级类']=='功能饮料','二级类'] = '3'
order9.loc[order9['二级类']=='咖啡','二级类'] = '4'
order9.loc[order9['二级类']=='坚果炒货','二级类'] = '5'
order9.loc[order9['二级类']=='方便速食','二级类'] = '6'
order9.loc[order9['二级类']=='果冻/龟苓膏','二级类'] = '7'
order9.loc[order9['二级类']=='果蔬饮料','二级类'] = '8'
order9.loc[order9['二级类']=='植物蛋白','二级类'] = '9'
order9.loc[order9['二级类']=='水','二级类'] = '10'
order9.loc[order9['二级类']=='海味零食','二级类'] = '11'
order9.loc[order9['二级类']=='碳酸饮料','二级类'] = '12'
order9.loc[order9['二级类']=='糖果/巧克力','二级类'] = '13'
order9.loc[order9['二级类']=='纸巾','二级类'] = '14'
order9.loc[order9['二级类']=='肉干/豆制品/蛋','二级类'] = '15'
order9.loc[order9['二级类']=='膨化食品','二级类'] = '16'
order9.loc[order9['二级类']=='茶饮料','二级类'] = '17'
order9.loc[order9['二级类']=='蜜饯/果干','二级类'] = '18'
order9.loc[order9['二级类']=='饼干糕点','二级类'] = '19'
order9.loc[order9['二级类']=='香烟','二级类'] = '20'
print('\n',order9.head())
#fig = plt.figure()
fig = plt.figure(figsize=(12,8),dpi=80)
ax = fig.add_subplot(111)
x=order9.loc[:,'月份'].values#X轴数据
y=order9.loc[:,'二级类'].values#Y轴数据
s=order9.loc[:, '实际金额'].values#气泡size
n=30
#ax.scatter(time,y,s=s*n,edgecolor='red',alpha=0.7)
ax.scatter(x,y,s=s*n,edgecolor='red',alpha=0.7)
#ax.scatter(x,s,s=s*n,edgecolor='red',alpha=0.7)
ax.set_xlabel('2017年月份')
ax.set_ylabel('商品的二级类目')
plt.savefig(r'C:\python\NewRetail\每月交易额均值气泡图.png')
plt.show()
